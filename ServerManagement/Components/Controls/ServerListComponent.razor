<h3>ServerListComponent</h3>

<table class="table table-striped">
    <RepeaterComponent Items="_servers">
        <Header>
        <thead>
            <tr>
                <th>Name</th>
                <th>City</th>
                <th>Status</th>
                <th>People Online</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        </Header>
        <Row Context="item">
            <ServerComponent Server="item"></ServerComponent>
        </Row>
    </RepeaterComponent>
</table>

<br />
<button type="button" class="btn btn-primary" @onclick="@(() => {})">Refresh</button>

@code {

    private bool isFirstRender = true;
    [Parameter] public string? CityName { get; set; }
    [Parameter] public string SearchFilter { get; set; }
    [Parameter] public int AnotherParam { get; set; }
    private List<Server> _servers;

    protected override void OnParametersSet()
    {

        if (!isFirstRender)
        {
            if (string.IsNullOrWhiteSpace(SearchFilter))
            {
                _servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
            }
            else
            {
                _servers = ServersRepository.SearchServers(SearchFilter);
            }
        }

    }


    public override Task SetParametersAsync(ParameterView parameters)
    {
        /* if the value of the CityName hasn't changed then we will
         * not invoke OnParameterSet HOOK.  */
        if (parameters.TryGetValue<string>("CityName", out var cityName))
        {
            if (cityName != CityName)
            {
                base.SetParametersAsync(parameters);
            }
        }

        /* if the value of the SearchFilter hasn't changed then we will
         * not invoke OnParameterSet HOOK.  */

        if (parameters.TryGetValue<string>("SearchFilter", out var searchFilter))
        {
            if (SearchFilter != searchFilter)
            {
                base.SetParametersAsync(parameters);
            }
        }

        /* when the following statement is executed the other event's in the
         * component lifecycle such as (OnParameterSet, ShouldRender,
         * OnAfterRender) will not execute. In other words, no other
         * HOOKS will execute that is available in the lifecycle if the
         * following statement is executed. */
        return Task.CompletedTask;
    }


    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            if (string.IsNullOrWhiteSpace(SearchFilter))
            {
                _servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
            }
            else
            {
                _servers = ServersRepository.SearchServers(SearchFilter);
            }
            isFirstRender = false;
            StateHasChanged();
        }
    }
}
