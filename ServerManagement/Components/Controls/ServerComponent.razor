<tr style="background-color: @GetBackGroundClr()">
    <td>
        @Server.Name
    </td>
    <td>
        @Server.City
    </td>

    <td style="color: @(Server.IsOnline ? "green" : "red")">
        @(Server.IsOnline ? "online" : "offline")
    </td>
    <td>
        @if (Server.IsOnline)
        {
            var random = new Random();
            var randomNumber = random.Next(0, 501);
            <text>@randomNumber</text>
        }
        else
        {
            <text>N/A</text>
        }
    </td>
    <td>
        @if (Server.IsOnline)
        {
            <button type="button"
                    class="btn btn-outline-danger"
                    @onclick="@(() => Server.IsOnline = false)">
                Turn Off
            </button>
        }
        else
        {
            <button type="button"
                    class="btn btn-outline-success"
                    @onclick="@(() => Server.IsOnline = true)">
                Turn On
            </button>
        }
        &nbsp;
        <a href="/servers/@Server.ServerId"
           class="link-underline-primary">Edit</a>
    </td>
</tr>

@if (editServer)
{
    <ServerManagement.Components.Pages.EditServer
        Id="@Server.ServerId.ToString()"></ServerManagement.Components.Pages.EditServer>
}


@code {

    private bool editServer = false;
    [ Parameter ]public Server? Server { get; set; }

    [ CascadingParameter(Name = "SelectedCity") ]
    public string SelectedCity { get; set; }

    private string GetBackGroundClr()
    {
        if (SelectedCity is not null)
        {
            switch (SelectedCity)
            {
                case "Toronto": return "powderblue";
                case "Montreal": return "lightgray";
                case "Ottawa": return "palegreen";
                case "Calgary": return "pink";
                case "Halifax": return "white";
                default: return "white";
            }
        }
        else
        {
            return "white";
        }
    }
}
