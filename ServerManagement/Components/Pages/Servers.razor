@page "/servers"
@page "/servers/back_from/{cityName}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br/>
<CityListComponent @ref="_cityListComponent"
                   selectedCity="@this.selectedCity"     
                   SelectCityCallback="HandleCitySelection"></CityListComponent>

<br/>

<SearchComponent _serverFilter="@_serverFilter"
                 HandleSearchFilter="HandleSearchFilter"></SearchComponent>

<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent
        CityName="@selectedCity"
        SearchFilter="@_serverFilter"
        AnotherParam="@anotherParam"></ServerListComponent>
</CascadingValue>

<p>
    <button class="btn btn-primary" @onclick="@(() => { Random random = new Random();
                                                    anotherParam = random.Next(0, 100); })">Change Param</button>
</p>

@code {

    [Parameter] public string? CityName { get; set; }
    private CityListComponent _cityListComponent;
    private string selectedCity = "Toronto";

    private int anotherParam;

    private string _serverFilter = string.Empty;
    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        _serverFilter = string.Empty;
    }

    private void HandleSearchFilter(string serverFilter)
    {
        _serverFilter = serverFilter;
        _cityListComponent.ClrListComponent();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            if(NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;
                StateHasChanged();
            }
        }
    }

}
