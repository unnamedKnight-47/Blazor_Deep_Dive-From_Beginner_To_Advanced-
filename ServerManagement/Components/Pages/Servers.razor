@page "/servers"
@rendermode InteractiveServer

<h3>Servers</h3>
<br/>
<br/>

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var item in _cities)
        {
            <div class="col">
                <div
                    class="card @(selectedCity.Equals(item, StringComparison.OrdinalIgnoreCase) ? "border-primary" : "") ">
                    <img src="@($"/images/{item}.png")"
                         class="card-img-top"
                         alt="...">
                    <div class="card-body">
                        <button type="button"
                                class="btn btn-primary"
                                value="@item"
                                @onclick="() => { GetServersByCity(item); }">
                            @item
                        </button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<br/>
@serverFilter
<br>
<div class="input-group">
    <input class="form-control" @bind-value="serverFilter"
           @bind-value:event="oninput"/>
    <button type="button" class="btn btn-secondary">
        Search
    </button>
</div>
<br>


@* Here,ServerListComponent is a non-routable child component,
ServerListComponent has a CityName property with [ Parameter ] attribute,
so, the parent component can use CityName property to send
argument to the ServerListComponent by using CityName property
like following *@

<ServerListComponent CityName="@selectedCity"></ServerListComponent>

@code {
    private List<string?> _cities { get; set; }
    private string? selectedCity = "Toronto";
    private string _serverFilter = string.Empty;

    private string serverFilter
    {
        get { return _serverFilter; }
        set
        {
            _serverFilter = value;
            // _servers = ServersRepository.SearchServers(_serverFilter);
        }
    }

    protected override void OnInitialized()
    {
        _cities = ServersRepository.GetServres().Select(s => s.City).Distinct().ToList();
    }

    private void GetServersByCity(string cityName)
    {
        selectedCity = cityName;
        // _servers = ServersRepository.GetServersByCity(cityName);
    }
}
