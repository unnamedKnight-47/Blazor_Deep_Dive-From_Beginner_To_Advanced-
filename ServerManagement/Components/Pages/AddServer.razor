@page "/add-server"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager


<h3>AddServer</h3>

<EditForm Model="server" FormName="AddServer"
          OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>


    <FieldComponent Label="Name">
        <Control>
            <InputText class="form-control"
                       @bind-Value="server.Name"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage
                For="() => server.Name"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
        <Control>
            <InputText class="form-control"
                       @bind-Value="server.City"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage
                For="() => server.City"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>


    <FieldComponent Label="Online">
        <Control>
            <InputCheckbox class="form-check-input"
                           @bind-Value="server.IsOnline"></InputCheckbox>
        </Control>
    </FieldComponent>

    <br/>
    <button type="submit" class="btn btn-primary">
        Add Server
    </button>
</EditForm>


@code {

    [ SupplyParameterFromForm ]public Server server { get; set; } = new Server() { IsOnline = false };

    private async Task Submit(EditContext args)
    {
        ServersRepository.AddServer(server);

        await InvokeAsync(() => { NavigationManager.NavigateTo("/servers"); });
    }

}
