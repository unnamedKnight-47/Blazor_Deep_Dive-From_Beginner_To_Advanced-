@page "/servers/{id}"
@inject NavigationManager NavigationManager


<h3>EditServer</h3>
<br />
@Id

@if (server is not null)
{
    <EditForm Model="server" FormName="formServer"
              OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>


        <InputNumber @bind-Value="server.ServerId"
                     hidden></InputNumber>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name"
                           class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.Name"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City"
                           class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.City"></ValidationMessage>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline"
                               class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">
            Update
        </button>
    </EditForm>
}


@code {

    [Parameter] public string? Id { get; set; }

    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? server { get; set; }

    private int intServerId;
    private bool isParsedSuccessfully;

    protected override void OnParametersSet()
    {
        isParsedSuccessfully = Int32.TryParse(Id, out intServerId);
        if (isParsedSuccessfully) server ??= ServersRepository.GetServerByServerId(intServerId);
    }

    private void Submit()
    {
        if (server is not null)
        {
            isParsedSuccessfully = Int32.TryParse(Id, out intServerId);
            if (isParsedSuccessfully)
            {
                ServersRepository.UpdateServer(intServerId, server);
            }
        }
        NavigationManager.NavigateTo("/servers");
    }

}
